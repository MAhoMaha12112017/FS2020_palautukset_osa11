{"version":3,"sources":["components/Persons.js","components/PersonForm.js","components/Filter.js","services/numberServices.js","components/Notification.js","App.js","index.js"],"names":["Persons","persons","filter","deletePerson","personsToShow","person","name","toUpperCase","includes","map","number","type","onClick","id","window","confirm","PersonForm","addPerson","newName","handleNameChange","newNumber","handleNumberChange","onSubmit","value","onChange","Filter","handleFilterChange","baseUrl","numberServices","getAll","axios","get","then","response","data","create","newPerson","post","delete","updateNumber","editedPerson","put","Notification","message","className","App","useState","setPersons","setNewName","setNewNumber","setFilter","errorMessage","setErrorMessage","useEffect","e","target","preventDefault","personSearched","find","editedPersonList","setTimeout","catch","error","concat","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1e88120e.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Persons = ({persons, filter, deletePerson}) => {\r\n  const personsToShow = persons.filter(person => person.name.toUpperCase().includes(filter.toUpperCase()))\r\n\r\n  const handleDeletionClick = (id, name) => {\r\n    const confirmation = window.confirm(`Delete ${name}?`)\r\n    if (confirmation) { deletePerson(id) }\r\n  }\r\n    \r\n  return (\r\n    <div>\r\n      {personsToShow.map(person => \r\n        <p key={person.name}>\r\n        {person.name} {person.number} \r\n        <button type=\"button\" onClick={() => handleDeletionClick(person.id, person.name)} >delete</button>\r\n        </p>\r\n        )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Persons","import React from 'react'\r\n\r\nconst PersonForm = ( {addPerson, newName, handleNameChange, newNumber, handleNumberChange} ) => {\r\n  return (\r\n    <form onSubmit={addPerson}>\r\n    <div>\r\n      name: <input value={newName} onChange={handleNameChange} />\r\n    </div>\r\n    <div>\r\n      number: <input value={newNumber} onChange={handleNumberChange} />\r\n    </div>\r\n    <div>\r\n      <button type=\"submit\" >add</button>\r\n    </div>\r\n  </form>\r\n  )\r\n}\r\n\r\nexport default PersonForm","import React from 'react'\r\n\r\nconst Filter = ({filter, handleFilterChange}) => {\r\n  return (\r\n    <p>filter shown with <input value={filter} onChange={handleFilterChange} /></p>\r\n  )\r\n \r\n}\r\n\r\nexport default Filter","import axios from 'axios'\r\n// const baseUrl = 'http://localhost:3001/api/persons'\r\n// const baseUrl = 'https://puhelinluettelo-b-matti.herokuapp.com/api/persons'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n  return axios.get(baseUrl).then(response => response.data)\r\n}\r\n\r\nconst create = (newPerson) => {\r\n  return axios.post(baseUrl, newPerson).then(response => response.data)\r\n}\r\n\r\nconst deletePerson = (id) => {\r\n  return axios.delete(`${baseUrl}/${id}`).then(response => response)\r\n}\r\n\r\nconst updateNumber = (person, newNumber) => {\r\n  const editedPerson = {...person}\r\n  editedPerson.number = newNumber\r\n  return axios.put(`${baseUrl}/${person.id}`, editedPerson).then(response => response.data)\r\n}\r\n\r\nconst numberServices = { getAll, create, deletePerson, updateNumber }\r\nexport default numberServices","import React from 'react'\r\n\r\nconst Notification = ({message}) => {\r\n  return (\r\n    <div className=\"error\">{message}</div>\r\n  )\r\n}\r\n\r\nexport default Notification","import React, { useState, useEffect } from 'react'\nimport Persons from './components/Persons'\nimport PersonForm from './components/PersonForm'\nimport Filter from './components/Filter'\nimport numberServices from './services/numberServices'\nimport Notification from './components/Notification'\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([])\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ filter, setFilter ] = useState('')\n  const [ errorMessage, setErrorMessage ] = useState(null)\n\n  const addPerson = (e) => {\n    e.preventDefault()\n\n    const personSearched = persons.find(person => person.name.toUpperCase() === newName.toUpperCase())\n    if (personSearched) {\n      const confirmation = window.confirm(`${newName} is already added to phonebook, replace the old number with the new one?`)\n      if (confirmation) { \n        numberServices.updateNumber(personSearched, newNumber)\n        .then(editedPerson => {\n          let editedPersonList = [...persons]\n          editedPersonList = editedPersonList.map(person => person.id !== editedPerson.id ? person : editedPerson)\n          setPersons(editedPersonList)\n          setErrorMessage(`${newName}: number changed`)\n          setNewName('')\n          setNewNumber('')\n          setTimeout(() => {\n            setErrorMessage(null)\n          }, 5000);\n        })\n        .catch(error => {\n          setErrorMessage(`${newName} already removed from server`)\n          setTimeout(() => {\n            setErrorMessage(null)\n          }, 5000);\n          setPersons(persons.filter(person => person.name !== newName))\n          setNewName('')\n          setNewNumber('')\n        })\n      }\n    } else {\n      numberServices.create({name: newName, number: newNumber})\n      .then(response => {\n        setPersons(persons.concat(response))\n        setErrorMessage(`${newName} added to Phonebook`)\n        setTimeout(() => {\n          setErrorMessage(null)\n        }, 5000);\n        setNewName('')\n        setNewNumber('')\n      })\n      .catch(error => {\n        // console.log('numberServices.create - error', error.response.data.error)\n        setErrorMessage(error.response.data.error)\n        setTimeout(() => {\n          setErrorMessage(null)\n        }, 5000)\n      })\n    }\n  }\n\n  const deletePerson = (id) => {\n    numberServices.deletePerson(id)\n    let editedPersonList = [...persons]\n    editedPersonList = editedPersonList.filter(person => person.id !== id)\n    setPersons(editedPersonList) \n    setErrorMessage(`Person removed from Phonebook`)\n    setTimeout(() => {\n      setErrorMessage(null)\n    }, 5000);\n  }\n\n  const handleNameChange = (e) => {\n    setNewName(e.target.value)\n  }\n\n  const handleNumberChange = (e) => {\n    setNewNumber(e.target.value)\n  }\n\n  const handleFilterChange = (e) => {\n    setFilter(e.target.value)\n  }\n\n  useEffect(() => {\n    numberServices.getAll()\n      .then(response => setPersons(response))\n  }, [])\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      {errorMessage ? <Notification message={errorMessage} /> : null}\n      <Filter filter={filter} handleFilterChange={handleFilterChange} />\n      <PersonForm \n        addPerson={addPerson}\n        newName={newName}\n        handleNameChange={handleNameChange}\n        newNumber={newNumber}\n        handleNumberChange={handleNumberChange}\n      />\n      <h2>Numbers</h2>\n      <Persons persons={persons} filter={filter} deletePerson={deletePerson}/>\n    </div>\n  )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}